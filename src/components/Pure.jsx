//чистая функция: 
// выполняет только свою логику, ничего не изменяет за пределами области действия ф-ции; 
// при одинаковых вводимых данных должна возвращать один и тот же результат

function double(number) {
  return 2 * number;
}
console.log(double(2)); //4
console.log(double(2)); //4
console.log(double(2)); //4

//If you pass it 3, it will return 6. Always.

//чистый компонент - выполняет только вычисления
//компоненты React, которые вы пишете, должны всегда возвращать один и тот же JSX, учитывая одни и те же входные данные

function Cup({ guest }) {
  return <h2>Tea cup for guest #{guest}</h2>;
}

export default function TeaGathering() {
  let cups = [];
  for (let i = 1; i <= 12; i++) {
    cups.push(<Cup key={i} guest={i} />);
  }
  return cups;
}
//могут изменять переменные и объекты, которые вы только что создали во время рендеринга (локальная мутация)

//Побочные эффекты (обновление экрана, запуск анимации, изменение данных) - происходят на стороне, не во время рендеринга
// вызываются либо обработчиками событий либо в useEffect
//обработчики событий не должны быть чистыми, потому что заупскаются не во вермя рендеринга